{"version":3,"file":"js/login.js","mappings":";;AAAA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,wFAAwF,iBAAiB;AACzG,KAAK;AACL,CAAC,I","sources":["webpack://ucan/./src/js/login.js"],"sourcesContent":[";(function() {\r\n    const loginFormBtn =  document.querySelector('#loginFormBtn');\r\n    const loginForm = document.querySelector('#loginForm');\r\n    const login = document.querySelector('.login');\r\n    const mediaSize = 991;   \r\n    const loginFormCollapse = new bootstrap.Collapse(loginForm, {\r\n        toggle: false\r\n    });\r\n    loginFormBtn.addEventListener('keydown', (e) => {\r\n        let keycode = e.keyCode || e.which;\r\n        if(e.shiftKey && keycode === 9) {\r\n            loginFormCollapse.hide();\r\n        }\r\n    })\r\n    loginFormBtn.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        loginFormCollapse.toggle();\r\n        login.classList.toggle('open');\r\n        if(window.innerWidth < mediaSize) {\r\n            login.classList.toggle('login-whide');\r\n        }\r\n    });\r\n    loginFormBtn.addEventListener('focus', function () {\r\n        loginFormCollapse.show();\r\n    });\r\n    loginForm.querySelectorAll('a').forEach((link, i , arr) => {\r\n        link.addEventListener('focusout', function () {\r\n            if(i === arr.length - 1) {\r\n                loginFormCollapse.hide();\r\n            }\r\n        });\r\n    });\r\n    // 驗證\r\n    const userName = loginForm.querySelector('#userName');\r\n    const userPassword = loginForm.querySelector('#userPassword');\r\n    const captcha = loginForm.querySelector('#captcha');\r\n    const invalid = loginForm.querySelector('#invalid');\r\n    const loginBtn = loginForm.querySelector('#loginBtn');\r\n    \r\n    loginBtn.addEventListener('click', () => {\r\n        const strArr = [];\r\n        let bool = false;\r\n        // \r\n        if(userName.value === '' || userName.value === null) {\r\n            strArr.push('帳號');\r\n            bool = true;\r\n        } else {\r\n            bool = false;\r\n        }\r\n        // \r\n        if(userPassword.value === '' || userPassword.value === null) {\r\n            strArr.push('密碼');\r\n            bool = true;\r\n        } else {\r\n            bool = false;\r\n        }\r\n        // \r\n        if(captcha.value === '' || captcha.value === null ) {\r\n            strArr.push('驗證碼');\r\n            bool = true;\r\n        } else {\r\n            bool = false;\r\n        }\r\n        bool === false ? invalid.textContent = '*號為必填欄位' : invalid.textContent = `*請輸入${strArr.join('、')}`;\r\n    });    \r\n})();"],"names":[],"sourceRoot":""}