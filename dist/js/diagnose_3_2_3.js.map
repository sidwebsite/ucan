{"version":3,"file":"js/diagnose_3_2_3.js","mappings":";;AAAA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL,CAAC,E","sources":["webpack://ucan/./src/js/diagnose_3_2_3.js"],"sourcesContent":["// Modal\r\nlet testAlertModal = new bootstrap.Modal(document.getElementById('testAlert'), {\r\n    keyboard: false,\r\n    backdrop: 'static'\r\n});\r\nwindow.addEventListener('load', () => testAlertModal.show());\r\n// elements\r\nconst diagnosisTest = document.querySelectorAll('.diagnosis-test');\r\nconst testAlert = document.querySelectorAll('.alert');\r\nconst testBtn = document.querySelector('#test-btn');\r\n// scroll\r\nfunction scrollToTargetAdjusted(elments) {\r\n    const headerOffset = 100;\r\n    let elementPosition = elments.getBoundingClientRect().top;\r\n    let offsetPosition = window.pageYOffset === 0 ? elementPosition + window.pageYOffset - (headerOffset + 80) : elementPosition + window.pageYOffset - headerOffset;\r\n    window.scrollTo({\r\n        top: offsetPosition,\r\n        behavior: \"smooth\"\r\n    });\r\n}\r\n// diagnosis test function\r\nconst switchFun = (bool, radios) => {\r\n    bool === 'true' ? radios.forEach(r => r.disabled = false) : radios.forEach(r => r.disabled = true);\r\n}\r\n// 2024/11/25修改 start\r\n// test options effect function\r\nconst testEffect = (el, index) => {\r\n    diagnosisTest.forEach((test, i) => {\r\n        i === index ? test.classList.add('diagnosis-test-active') : test.classList.remove('diagnosis-test-active')\r\n    })\r\n    \r\n    const testEnd = diagnosisTest.length - 1;\r\n    // block alert\r\n    !testAlert[index].classList.contains('visually-hidden') ? testAlert[index].classList.add('visually-hidden') : false;\r\n    \r\n    // 開啟一下題radio\r\n    if(el === 'false') {\r\n        el = 'true'\r\n        if(index !== testEnd) {\r\n            const nextElement = diagnosisTest[index + 1];\r\n            const nextElementRadios = nextElement.querySelectorAll('.radio > input[type=\"radio\"]');\r\n            nextElementRadios.forEach(r => r.disabled = false);     \r\n        }\r\n    }\r\n}\r\nconst testArr = [...diagnosisTest]\r\nfor (let i = 0; i < diagnosisTest.length; i++) {\r\n    const element = diagnosisTest[i]\r\n    const radios = element.querySelectorAll('.radio > input[type=\"radio\"]');\r\n    if(i === 0) {\r\n        radios.forEach(r => r.disabled = false)\r\n        element.classList.add('diagnosis-test-active');\r\n    } else {\r\n        radios.forEach(r => r.disabled = true)\r\n    };\r\n    // // change \r\n    radios.forEach((radio) => {\r\n        if(radio.checked === true) {\r\n            element.dataset.switch = 'true';\r\n            switchFun(element.dataset.switch, radios);\r\n        } else {\r\n            // keydown\r\n            radio.addEventListener('keydown', (e) => {\r\n                if(e.key === 'Tab') {\r\n                    element.dataset.switch = 'true';\r\n                    testEffect(element.dataset.switch, i)\r\n                }\r\n            })\r\n            // click\r\n            radio.addEventListener('click', () => {\r\n                element.dataset.switch = 'true'\r\n                testEffect(element.dataset.switch, i)\r\n            });\r\n            // focus\r\n            radio.addEventListener('focus', () => {\r\n                radio.checked = true\r\n                testEffect(element.dataset.switch, i)\r\n            })\r\n        }\r\n    });\r\n}\r\n// 2024/11/25修改 end\r\n// button function\r\ntestBtn.addEventListener('click', () => {\r\n    let testNmuber = [];\r\n    testArr.forEach((test, index) => {\r\n        if(test.dataset.switch === 'false') {\r\n            testAlert[index].classList.remove('visually-hidden');\r\n            testNmuber.push(index);\r\n            scrollToTargetAdjusted(testArr[testNmuber[0]]);\r\n        } else {\r\n            testAlert[index].classList.add('visually-hidden');\r\n        }\r\n    });\r\n});"],"names":[],"sourceRoot":""}